apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    namespace "com.google.android.apps.playconsole"
    compileSdk 34
    defaultConfig {
        applicationId "com.google.android.apps.playconsole"
        minSdkVersion 22
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // noCompress "tflite"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation project(':capacitor-android')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: "capacitor.build.gradle"

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

// Corrects the path to the cordova variables script
// by using the `nodeModulesDir` variable defined in the root build.gradle
try {
  def cordovaVariables = new File(nodeModulesDir, "/@capacitor/cordova-android-plugins/src/cordova.variables.gradle")
  if (cordovaVariables.exists()) {
    apply from: cordovaVariables
  }
} catch (Exception e) {
  logger.warn("Could not apply cordova.variables.gradle")
}
