
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read anyone's profile, but only write to their own.
    match /users/{userId} {
      allow read;
      allow write: if request.auth.uid == userId;
    }

    // Participants can read a match, but only write to it via transactions in Cloud Functions.
    match /matches/{matchId} {
      allow read: if request.auth.uid in resource.data.participants;
      allow update, delete: if false; // All updates via transactions
    }

    // Users can read/write their own friend requests.
    match /friendRequests/{requestId} {
      allow read, write: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }

    // Challenges can be read/written by the involved parties.
    match /challenges/{challengeId} {
      allow read, write: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow list: if request.auth.uid == request.query.where.toId || request.auth.uid == request.query.where.fromId;
    }
    
    // Open challenges can be read by anyone, but only created/deleted by the poster.
    match /openChallenges/{challengeId} {
        allow read, list;
        allow create: if request.auth.uid == request.resource.data.posterId;
        allow delete: if request.auth.uid == resource.data.posterId;
    }

    // Participants can read/write to a tournament document.
    match /tournaments/{tournamentId} {
        allow read: if request.auth.uid in resource.data.participantIds;
        allow create: if request.auth.uid == request.resource.data.organizerId;
        allow update: if request.auth.uid == resource.data.organizerId;
    }

    // Chat messages can only be read/written by participants in the chat.
    match /chats/{chatId} {
        allow read, update: if request.auth.uid in resource.data.participantIds;
        allow create: if request.auth.uid in request.resource.data.participantIds;

        match /messages/{messageId} {
            allow read, create: if get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
        }
    }
    
    // --- Game Rules ---
    match /rallyGames/{gameId} {
        allow read, update: if request.auth.uid in resource.data.participantIds;
        allow create: if request.auth.uid in request.resource.data.participantIds;
    }
    
    match /legendGames/{gameId} {
        allow read, update: if request.auth.uid in resource.data.participantIds;
        allow create: if request.auth.uid in request.resource.data.participantIds;
    }

    // --- Practice Log Rules ---
    match /practiceSessions/{sessionId} {
      // Allow a user to create a session if the new document's userId matches their own.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Allow a user to read, update, or delete their own session document.
      allow get, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Allow a user to query the collection, but only for their own documents.
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
    }
    
    // --- Reporting Rules ---
    match /reports/{reportId} {
        allow create: if request.auth.uid == request.resource.data.reporterId;
        // Admins would have broader access, handled via Admin SDK or custom claims.
    }
    
    // --- Courts ---
    match /courts/{courtId} {
      allow read; // Publicly readable court information
    }
  }
}
