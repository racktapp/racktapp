
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can be read by anyone authenticated, but only written by themselves.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Participants can read/write chats and messages.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
      
      match /messages/{messageId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }

    // Friend requests can be read by sender/receiver, deleted by either.
    match /friendRequests/{requestId} {
      allow read, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow create: if request.auth.uid == request.resource.data.fromId;
    }

    // Challenges can be read by sender/receiver.
    match /challenges/{challengeId} {
      allow read: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow create: if request.auth.uid == request.resource.data.fromId;
      // Status can be updated by receiver (accept/decline) or sender (cancel)
      allow update: if (request.auth.uid == resource.data.toId && request.resource.data.status in ['accepted', 'declined']) || 
                       (request.auth.uid == resource.data.fromId && request.resource.data.status == 'cancelled');
    }

    // Open challenges can be read by anyone, created by anyone, deleted only by poster.
    match /openChallenges/{challengeId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.posterId;
    }
    
    // Matches can be created by a participant, and can be read by any participant.
    // Confirming/declining a match is a write operation.
    match /matches/{matchId} {
      allow read: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
      allow update: if request.auth.uid in resource.data.participants;
    }

    // Tournaments can be read by participants, and updated by the organizer.
    match /tournaments/{tournamentId} {
      allow read: if request.auth.uid in resource.data.participantIds;
      allow create: if request.auth.uid == request.resource.data.organizerId;
      allow update: if request.auth.uid == resource.data.organizerId;
    }

    // Games (Rally & Legend) can be read/written by participants.
    match /rallyGames/{gameId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
    }
    match /legendGames/{gameId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
    }
  }
}
    