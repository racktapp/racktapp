rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own document and public profiles, but only write to their own.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // Allow users to read/write their own practice sessions
    match /users/{userId}/practiceSessions/{sessionId} {
        allow read, write: if request.auth.uid == userId;
    }

    // Friend requests can be read by involved parties, created by anyone, and deleted by involved parties.
    match /friendRequests/{requestId} {
      allow read, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow create: if request.auth != null;
    }

    // Challenges can be read/written by the two participants
    match /challenges/{challengeId} {
      allow read, write, update: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }

    // Open challenges can be read by anyone, but only created/deleted by authenticated users.
    match /openChallenges/{challengeId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.posterId;
    }

    // Matches can be read by participants, created by anyone, and updated by participants.
    match /matches/{matchId} {
      allow read: if request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
      allow update: if request.auth.uid in resource.data.participantsToConfirm;
    }

    // Chat documents are accessible only to participants.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;

      // Messages can be read by participants, and created by participants.
      match /messages/{messageId} {
        allow read: if get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
        allow create: if request.auth.uid == request.resource.data.senderId && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }

    // Tournaments are readable and writable by participants
    match /tournaments/{tournamentId} {
        allow read: if request.auth.uid in resource.data.participantIds;
        allow create: if request.auth.uid == request.resource.data.organizerId;
        allow update: if request.auth.uid == resource.data.organizerId;
    }

    // Game collections are readable and writable by participants
    match /rallyGames/{gameId} {
        allow read, write: if request.auth.uid in resource.data.participantIds;
    }

    match /legendGames/{gameId} {
        allow read, write: if request.auth.uid in resource.data.participantIds;
    }
    
    // User reports can only be created by authenticated users
    match /reports/{reportId} {
        allow create: if request.auth.uid == request.resource.data.reporterId;
    }
  }
}
