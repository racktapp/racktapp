
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // By default, deny all access.
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to read and write their own user document.
    // Allow any user to read public profile information.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // Allow participants to read match documents.
    // Allow authenticated users to create new matches.
    // Allow participants to update pending matches.
    match /matches/{matchId} {
      allow read: if request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      allow update: if request.auth.uid in resource.data.participants && resource.data.status == 'pending';
    }

    // Allow authenticated users to manage their friend requests.
    match /friendRequests/{requestId} {
      allow read, write: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }
    
    // Allow participants to read and write to their chats and messages.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
      
      match /messages/{messageId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }
    
    // Allow authenticated users to create and read open challenges.
    // Allow the user who posted a challenge to delete it.
    match /openChallenges/{challengeId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.posterId;
    }

    // Allow involved users to manage direct challenges.
    match /challenges/{challengeId} {
      allow read, write: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }
    
    // Allow authenticated users to create tournaments.
    // Allow participants to read tournament data.
    // Allow the organizer to update the tournament.
    match /tournaments/{tournamentId} {
      allow read: if request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.organizerId;
    }
    
    // Allow participants to interact with their games.
    match /rallyGames/{gameId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
    }
    
    match /legendGames/{gameId} {
      allow read, write: if request.auth.uid in resource.data.participantIds;
    }

    // Allow authenticated users to log and read their own practice sessions.
    match /practiceSessions/{sessionId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
    
    // Allow any authenticated user to submit a report.
    match /reports/{reportId} {
      allow create: if request.auth != null;
    }
  }
}
