
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /matches/{matchId} {
      allow read: if request.auth != null && resource.data.participants.hasAny([request.auth.uid]);
      allow write: if request.auth != null && request.auth.uid in resource.data.participantsToConfirm;
      allow create: if request.auth != null;
    }

    match /challenges/{challengeId} {
       allow read, write: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
       allow list: if request.auth != null;
    }

    match /openChallenges/{challengeId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null && request.auth.uid == resource.data.posterId;
    }
    
    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow list: if request.auth != null;
    }

    match /tournaments/{tournamentId} {
      allow read: if request.auth != null && resource.data.participantIds.hasAny([request.auth.uid]);
      allow write: if request.auth != null && request.auth.uid == resource.data.organizerId;
      allow create: if request.auth != null;
    }
    
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }
    
    match /practiceSessions/{sessionId} {
      allow get, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow list: if request.auth != null && request.query.filters.size() > 0 && request.query.filters[0].field == 'userId' && request.query.filters[0].value == request.auth.uid;
    }

    match /rallyGames/{gameId} {
      allow read, write: if request.auth != null && (request.auth.uid in resource.data.participantIds || request.auth.uid == resource.data.currentPlayerId);
    }
    
    match /legendGames/{gameId} {
      allow read, write: if request.auth != null && (request.auth.uid in resource.data.participantIds || request.auth.uid == resource.data.currentPlayerId);
    }
  }
}
