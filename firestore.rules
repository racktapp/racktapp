rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all access unless explicitly allowed.
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Users Collection ---
    // Users can read any public profile.
    // Users can only create their own user document.
    // Users can only update their own profile data.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // --- Participant-Based Collections ---
    // This rule applies to matches, chats, tournaments, and games.
    // Users can get a list of items they are a part of.
    // Users can get/update a specific item if they are a participant.
    match /{collectionName}/{docId}
      where collectionName in ['matches', 'chats', 'tournaments', 'rallyGames', 'legendGames'] {
      allow list: if request.auth != null && request.query.where.size() == 1 &&
                     request.query.where[0].field == 'participantIds' &&
                     request.query.where[0].op == 'array-contains' &&
                     request.query.where[0].value == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.participantIds.hasAny([request.auth.uid]);
    }

    // --- Chat Messages Subcollection ---
    // Users can only read/write messages in a chat they are a participant of.
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
    }

    // --- Challenges ---
    // Users can only interact with challenges sent to or from them.
    match /challenges/{challengeId} {
       allow list: if request.auth != null; // More specific queries are checked below
       allow read, update, delete: if request.auth != null && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
       allow create: if request.auth != null && request.resource.data.fromId == request.auth.uid;
    }

    // --- Open Challenges ---
    // Anyone can read open challenges.
    // Only the poster can create or delete their own challenge.
    match /openChallenges/{challengeId} {
        allow read, list: if request.auth != null;
        allow create: if request.auth != null && request.resource.data.posterId == request.auth.uid;
        allow delete: if request.auth != null && resource.data.posterId == request.auth.uid;
    }

    // --- Friend Requests ---
    // Similar to challenges, you can interact with requests you sent or received.
     match /friendRequests/{requestId} {
        allow list: if request.auth != null;
        allow read, delete: if request.auth != null && (resource.data.fromId == request.auth.uid || resource.data.toId == request.auth.uid);
        allow create: if request.auth != null && request.resource.data.fromId == request.auth.uid;
        // Accept (update) is handled via transactions, not direct writes.
    }

    // --- Practice Sessions ---
    // Users can only manage their own practice sessions.
    match /practiceSessions/{sessionId} {
      allow read, write, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // --- Reports ---
    // Users can create reports, but cannot read, update, or delete them.
    match /reports/{reportId} {
      allow create: if request.auth != null;
    }
  }
}
