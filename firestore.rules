
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if a user is a participant in a document
    function isParticipant(docData) {
      return request.auth.uid in docData.participantIds;
    }
    
    // User profiles
    match /users/{userId} {
      // Anyone authenticated can read a user's public profile
      allow read: if isAuthenticated();
      // A user can only create their own profile and can only update their own profile
      allow write: if request.auth.uid == userId;
    }

    // Matches
    match /matches/{matchId} {
      allow read, update: if isAuthenticated() && isParticipant(resource.data);
      allow create: if isAuthenticated();
    }
    
    // Challenges
    match /challenges/{challengeId} {
      allow read, update, delete: if isAuthenticated() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if isAuthenticated();
    }
    
    // Open Challenges
    match /openChallenges/{challengeId} {
      allow read, create: if isAuthenticated();
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.posterId;
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
      allow read, delete: if isAuthenticated() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if isAuthenticated();
    }
    
    // Tournaments
    match /tournaments/{tournamentId} {
      allow read: if isAuthenticated() && isParticipant(resource.data);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && request.auth.uid == resource.data.organizerId;
    }
    
    // Chat messages are a subcollection of chats
    match /chats/{chatId} {
      allow read, update, create, delete: if isAuthenticated() && isParticipant(resource.data);
      
      match /messages/{messageId} {
        allow read, create: if isAuthenticated() && get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.senderId;
      }
    }
    
    // Game collections
    match /rallyGames/{gameId} {
       allow read, create, update, delete: if isAuthenticated() && isParticipant(resource.data);
    }
    
    match /legendGames/{gameId} {
       allow read, create, update, delete: if isAuthenticated() && isParticipant(resource.data);
    }

    // Practice Sessions
    match /practiceSessions/{sessionId} {
      allow read, create: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    // Reports
    match /reports/{reportId} {
      allow create: if isAuthenticated();
    }
  }
}
