rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // --- Global Rules ---
    // Users can read any profile, but can only write to their own.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }
    
    // Anyone can read open challenges
    match /openChallenges/{challengeId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == request.resource.data.posterId;
    }

    // Reports can only be created. No one can read or update them through client.
    match /reports/{reportId} {
        allow read, update, delete: if false;
        allow create: if request.auth.uid != null;
    }

    // --- User-Specific Subcollections ---
    match /users/{userId}/practiceSessions/{sessionId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // --- Rules based on user ID being in a list ---
    function isParticipant(collectionName) {
      return request.auth.uid in get(/databases/$(database)/documents/$(collectionName)/$(resource.id)).data.participantIds
    }
    
    match /chats/{chatId} {
      allow read, write: if isParticipant('chats');
      
      match /messages/{messageId} {
        allow read, write: if isParticipant('chats');
      }
    }
    
    match /tournaments/{tournamentId} {
        allow read: if true; // Allow public viewing of tournament brackets
        allow write: if isParticipant('tournaments');
    }

    match /rallyGames/{gameId} {
        allow read, write: if isParticipant('rallyGames');
    }
    
    match /legendGames/{gameId} {
        allow read, write: if isParticipant('legendGames');
    }

    // --- Rules based on specific fields ---
    function isPlayer() {
        return request.auth.uid in resource.data.participants;
    }
    
    match /matches/{matchId} {
        allow read, write: if isPlayer();
    }
    
    function isSenderOrReceiver() {
      return request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
    }
    
    match /challenges/{challengeId} {
        allow read, write: if isSenderOrReceiver();
    }
    
    match /friendRequests/{requestId} {
        allow read, write: if isSenderOrReceiver();
    }
  }
}