rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isFriend(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.friendIds.hasAny([request.auth.uid]);
    }
    
    function isParticipant(doc) {
      return isSignedIn() && request.auth.uid in doc.data.participantIds;
    }

    // --- Users Collection ---
    match /users/{userId} {
      allow read: if true; // Public profiles
      allow create: if isUser(userId) && request.resource.data.uid == userId;
      allow update: if isUser(userId);
      allow delete: if isUser(userId);
      
      // Subcollections
      match /practiceSessions/{sessionId} {
        allow read, write: if isUser(userId);
      }
    }
    
    // --- Friend Requests Collection ---
    match /friendRequests/{requestId} {
      allow read: if isSignedIn() && (request.resource.data.fromId == request.auth.uid || request.resource.data.toId == request.auth.uid);
      allow create: if isSignedIn() && request.resource.data.fromId == request.auth.uid;
      allow delete: if isSignedIn() && (request.resource.data.fromId == request.auth.uid || request.resource.data.toId == request.auth.uid);
    }

    // --- Challenges Collections ---
    match /challenges/{challengeId} {
        allow read: if isSignedIn() && (request.resource.data.fromId == request.auth.uid || request.resource.data.toId == request.auth.uid);
        allow create: if isSignedIn() && request.resource.data.fromId == request.auth.uid;
        allow update: if isSignedIn() && (request.resource.data.toId == request.auth.uid); // Only recipient can accept/decline
        allow delete: if isSignedIn() && (request.resource.data.fromId == request.auth.uid || request.resource.data.toId == request.auth.uid);
    }
    
    match /openChallenges/{challengeId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.resource.data.posterId == request.auth.uid;
        allow delete: if isSignedIn() && resource.data.posterId == request.auth.uid;
    }

    // --- Matches Collection ---
    match /matches/{matchId} {
        allow read: if isParticipant(get(/databases/$(database)/documents/matches/$(matchId)));
        allow create: if isParticipant(request.resource);
        allow update: if isParticipant(get(/databases/$(database)/documents/matches/$(matchId))); // For confirming results
    }
    
    // --- Tournaments Collection ---
    match /tournaments/{tournamentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.resource.data.organizerId == request.auth.uid;
        allow update: if isSignedIn() && resource.data.organizerId == request.auth.uid; // Only organizer can update scores
    }
    
    // --- Chats Collection ---
    match /chats/{chatId} {
        allow read, update, delete: if isParticipant(get(/databases/$(database)/documents/chats/$(chatId)));
        allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
        
        match /messages/{messageId} {
            allow read: if isParticipant(get(/databases/$(database)/documents/chats/$(chatId)));
            allow create: if isParticipant(get(/databases/$(database)/documents/chats/$(chatId))) && request.resource.data.senderId == request.auth.uid;
        }
    }
    
    // --- Games Collections ---
    match /rallyGames/{gameId} {
      allow read, update, delete: if isParticipant(get(/databases/$(database)/documents/rallyGames/$(gameId)));
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
    }

    match /legendGames/{gameId} {
      allow read, update, delete: if isParticipant(get(/databases/$(database)/documents/legendGames/$(gameId)));
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
    }
    
    // --- Reports Collection ---
    match /reports/{reportId} {
      allow create: if isSignedIn() && request.resource.data.reporterId == request.auth.uid;
      // Read/write access should be limited to admins, not covered here.
      allow read, update, delete: if false; 
    }
  }
}