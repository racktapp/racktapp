
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny: By default, no one can read or write to any document.
    match /{document=**} {
      allow read, write: if false;
    }

    // --- User Profiles ---
    // Anyone authenticated can view a user's profile.
    // A user can only create, update, or delete their own profile.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;

      // --- User Subcollections ---
      // A user can only manage documents within their own subcollections.
      match /practiceSessions/{sessionId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // --- Matches ---
    // Users can only read matches they participated in.
    match /matches/{matchId} {
      allow get: if request.auth.uid in resource.data.participants;
      allow list: if request.auth.uid == request.query.where.value;
      allow create: if request.auth.uid in request.resource.data.participants;
      allow update: if request.auth.uid in resource.data.participants;
    }

    // --- Challenges (Direct) ---
    // Users can read/write challenges they sent or received.
    match /challenges/{challengeId} {
      allow read, create, update, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow list: if request.auth.uid == request.query.where.value;
    }

    // --- Open Challenges ---
    // Anyone authenticated can list/read open challenges.
    // A user can only create/delete their own open challenges.
    match /openChallenges/{challengeId} {
      allow read, list: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.posterId;
      allow delete: if request.auth.uid == resource.data.posterId;
    }

    // --- Friend Requests ---
    // Users can read/write requests they sent or received.
    match /friendRequests/{requestId} {
        allow read, create, update, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
        allow list: if request.auth.uid == request.query.where.value;
    }

    // --- Chats ---
    // Users can only interact with chats they are a part of.
    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.participantIds;
      allow list: if request.query.where.value == request.auth.uid; // Allows querying for user's own chats

      // --- Chat Messages ---
      // Users can only read/write messages in chats they are a part of.
      match /messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }

    // --- Tournaments ---
    // Users can only read/write tournaments they are a part of.
    match /tournaments/{tournamentId} {
        allow read: if request.auth.uid in resource.data.participantIds;
        allow list: if request.query.where.value == request.auth.uid;
        allow create: if request.auth.uid == request.resource.data.organizerId;
        allow update: if request.auth.uid == resource.data.organizerId;
    }

    // --- AI Games ---
    // Users can interact with games they are participating in.
    match /rallyGames/{gameId} {
        allow read, update, delete: if request.auth.uid in resource.data.participantIds;
        allow list: if request.query.where.value == request.auth.uid;
        allow create: if request.auth.uid in request.resource.data.participantIds;
    }
    match /legendGames/{gameId} {
        allow read, update, delete: if request.auth.uid in resource.data.participantIds;
        allow list: if request.query.where.value == request.auth.uid;
        allow create: if request.auth.uid in request.resource.data.participantIds;
    }
    
    // --- User Reports ---
    // Any authenticated user can create a report.
    match /reports/{reportId} {
      allow create: if request.auth != null;
    }
  }
}
