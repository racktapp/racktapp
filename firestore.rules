rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USER-RELATED RULES
    match /users/{userId} {
      allow read;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId) && 
                      // Protect critical fields from being changed by the user
                      request.resource.data.email == resource.data.email &&
                      request.resource.data.uid == resource.data.uid;
      allow delete: if isSignedIn() && isOwner(userId);

      // Subcollection for user practice sessions
      match /practiceSessions/{sessionId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }

    // FRIEND-RELATED RULES
    match /friendRequests/{requestId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
                             (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    
    // CHALLENGE-RELATED RULES
    match /challenges/{challengeId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() &&
                               (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }

    match /openChallenges/{challengeId} {
        allow read;
        allow create: if isSignedIn() && isOwner(resource.data.posterId);
        allow delete: if isSignedIn() && isOwner(resource.data.posterId);
    }

    // MATCH-RELATED RULES
    match /matches/{matchId} {
      allow read: if isSignedIn() && request.auth.uid in resource.data.participants;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid in resource.data.participants;
    }

    // CHAT-RELATED RULES
    match /chats/{chatId} {
      allow read, update, create: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      
      match /messages/{messageId} {
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }
    
    // GAME-RELATED RULES
    match /rallyGames/{gameId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      allow create: if isSignedIn();
    }
    
    match /legendGames/{gameId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      allow create: if isSignedIn();
    }
    
    // TOURNAMENT-RELATED RULES
    match /tournaments/{tournamentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.organizerId;
        allow update: if isSignedIn() && request.auth.uid == resource.data.organizerId;
    }

    // REPORT-RELATED RULES
    match /reports/{reportId} {
      allow create: if isSignedIn();
    }
  }
}