rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isFriend(a, b) {
      return exists(/databases/$(database)/documents/users/$(a)/friends/$(b)) &&
             get(/databases/$(database)/documents/users/$(a)/friends/$(b)).data.status == "accepted";
    }

    match /matches/{matchId} {
      allow create: if request.auth != null
        && request.resource.data.playerA == request.auth.uid
        && isFriend(request.auth.uid, request.resource.data.playerB);

      allow read: if request.auth != null
        && (resource.data.playerA == request.auth.uid || resource.data.playerB == request.auth.uid);

      allow update, delete: if false;
    }

    match /users/{uid} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    match /users/{uid}/friends/{friendUid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    match /challenges/{id} {
      allow read: if true;
      allow create, update: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    match /courts/{id} {
      allow read: if true;
      allow write: if false;
    }
  }
}
