
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to manage their own profile data
    match /users/{userId} {
      allow read: if true;
      allow update: if request.auth.uid == userId;
      
      // Allow users to manage their own subcollections
      match /{subcollection}/{docId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // Allow users to read/write their own friend requests
    match /friendRequests/{requestId} {
      allow read, write, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow list: if request.auth != null;
    }

    // Rules for challenges
    match /challenges/{challengeId} {
      allow read, write, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId;
      allow list: if request.auth != null;
    }
    
    // Rules for open challenges
    match /openChallenges/{challengeId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.posterId;
      allow delete: if request.auth.uid == resource.data.posterId;
    }

    // Rules for matches
    match /matches/{matchId} {
        allow read: if request.auth != null && request.auth.uid in resource.data.participants;
        allow create, update: if request.auth != null && request.auth.uid in request.resource.data.participants;
        allow list: if request.auth != null;
    }

    // Rules for tournaments
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.organizerId;
      allow update: if request.auth.uid == resource.data.organizerId;
    }

    // Rules for chat
    match /chats/{chatId} {
      allow read, write, create, update: if request.auth.uid in resource.data.participantIds;
      allow list: if request.auth != null && request.query.where.participantIds.includes(request.auth.uid);
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }

    // Rules for games
    match /rallyGames/{gameId} {
      allow read, write, create, update, delete: if request.auth.uid in resource.data.participantIds;
      allow list: if request.auth != null && request.query.where.participantIds.includes(request.auth.uid);
    }
    match /legendGames/{gameId} {
      allow read, write, create, update, delete: if request.auth.uid in resource.data.participantIds;
      allow list: if request.auth != null && request.query.where.participantIds.includes(request.auth.uid);
    }
    
    // Rules for reports
    match /reports/{reportId} {
        allow create: if request.auth.uid == request.resource.data.reporterId;
    }
  }
}
