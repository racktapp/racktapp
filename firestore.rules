rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================================================
    // Utility Functions
    // =================================================================
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isParticipant(resource) {
      return isSignedIn() && request.auth.uid in resource.data.participantIds;
    }
    
    // =================================================================
    // User Profiles
    // =================================================================
    match /users/{userId} {
      // Anyone can read a user's profile
      allow read: if true;
      // Only the user themselves can create or update their profile
      allow write: if isUser(userId);
    }
    
    // =================================================================
    // Practice Sessions
    // =================================================================
    match /users/{userId}/practiceSessions/{sessionId} {
      // Only the user can read or write their own practice sessions
      allow read, write: if isUser(userId);
    }

    // =================================================================
    // Challenges (Direct & Open)
    // =================================================================
    match /challenges/{challengeId} {
      // Allow read if you are the sender or the receiver
      allow read: if isSignedIn() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      // Allow create by sender, update by receiver (to accept/decline), delete by sender (to cancel)
      allow write: if isSignedIn(); 
    }
    
    match /openChallenges/{challengeId} {
       // Anyone can read open challenges
      allow read: if true;
       // Only authenticated users can create. Only the poster can delete.
      allow create: if isSignedIn();
      allow delete: if isSignedIn() && request.auth.uid == resource.data.posterId;
    }

    // =================================================================
    // Friend Requests
    // =================================================================
    match /friendRequests/{requestId} {
      // Allow read/write if you are the sender or receiver
      allow read, write: if isSignedIn() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
    }
    
    // =================================================================
    // Matches
    // =================================================================
    match /matches/{matchId} {
      // Allow read if you participated in the match
      allow read: if isParticipant(get(after(matchId)));
      allow create: if isSignedIn();
      allow update: if isParticipant(get(after(matchId)));
    }
    
    // =================================================================
    // Chats & Messages
    // =================================================================
    match /chats/{chatId} {
      // Allow read/write if you are a participant in the chat
      allow read, write: if isParticipant(get(after(chatId)));
      
      match /messages/{messageId} {
         // Allow read if you are a participant in the parent chat
         allow read: if isParticipant(get(path("/databases/{database}/documents/chats", chatId)));
         // Allow write only if you are the sender
         allow write: if isSignedIn() && request.auth.uid == request.resource.data.senderId;
      }
    }
    
    // =================================================================
    // Tournaments
    // =================================================================
    match /tournaments/{tournamentId} {
       // Allow read if you are a participant
      allow read: if isParticipant(get(after(tournamentId)));
      // Allow create by organizer, allow update if you are a participant (for reporting scores)
      allow write: if isParticipant(get(after(tournamentId)));
    }
    
    // =================================================================
    // Games (Rally & Legend)
    // =================================================================
    match /rallyGames/{gameId} {
       // Allow read/write if you are a participant
      allow read, write: if isParticipant(get(after(gameId)));
    }
    
    match /legendGames/{gameId} {
       // Allow read/write if you are a participant
      allow read, write: if isParticipant(get(after(gameId)));
    }
    
    // =================================================================
    // Reports
    // =================================================================
    match /reports/{reportId} {
      // Only authenticated users can create reports.
      allow create: if isSignedIn();
      // No one can read/update/delete reports after creation.
      allow read, update, delete: if false;
    }
  }
}
