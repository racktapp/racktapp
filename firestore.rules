rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Utility Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isParticipant(resource) {
        return request.auth.uid in resource.data.participantIds;
    }

    // --- User Profiles ---
    // Users can read any profile (for leaderboards, friend searches, etc.)
    // Users can only create their own profile document.
    // Users can only update their own profile document.
    // Users can delete their own profile document.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
      
      // Practice sessions are private to the user
      match /practiceSessions/{sessionId} {
        allow read, create, update, delete: if isOwner(userId);
      }
    }

    // --- Friend Requests ---
    // A user can read a request if they sent it or received it.
    // A user can create a request if they are the sender.
    // A user can delete a request if they sent it or received it (cancel/decline).
    match /friendRequests/{requestId} {
      allow read, delete: if isSignedIn() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.fromId;
    }

    // --- Challenges ---
    // A user can read/delete a challenge if they sent or received it.
    // A user can create a challenge if they are the sender.
    // A user can update a challenge (accept/decline) if they are the recipient.
    match /challenges/{challengeId} {
      allow read, delete: if isSignedIn() && (request.auth.uid == resource.data.fromId || request.auth.uid == resource.data.toId);
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.fromId;
      allow update: if isSignedIn() && request.auth.uid == resource.data.toId;
    }

    // --- Open Challenges ---
    // Any signed-in user can read all open challenges.
    // Any signed-in user can create an open challenge.
    // A user can only delete an open challenge they posted.
    match /openChallenges/{challengeId} {
        allow read, create: if isSignedIn();
        allow delete: if isSignedIn() && isOwner(resource.data.posterId);
    }
    
    // --- Matches ---
    // A user can read a match they participated in.
    // Any participant can create a match report.
    // Any participant can update a pending match (confirm/decline).
    match /matches/{matchId} {
      allow read, update: if isSignedIn() && isParticipant(resource);
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;
    }

    // --- Chats & Messages ---
    // A user can read/write to a chat if they are a participant.
    // Messages can only be read/written by participants of the parent chat.
    match /chats/{chatId} {
      allow read, update: if isSignedIn() && isParticipant(resource);
      
      match /messages/{messageId} {
        allow read: if isSignedIn() && get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.senderId && get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }
    
    // --- Tournaments ---
    // Any signed-in user can read any tournament.
    // Any signed-in user can create a tournament.
    // Only the organizer can update a tournament (reporting winners).
    match /tournaments/{tournamentId} {
      allow read, create: if isSignedIn();
      allow update: if isSignedIn() && isOwner(resource.data.organizerId);
    }

    // --- AI Games (Rally & Legend) ---
    // A user can access a game if they are a participant.
    // Creation is handled by server-side actions, but reads/updates are direct.
    match /rallyGames/{gameId} {
      allow read, update, delete: if isSignedIn() && isParticipant(resource);
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
    }
    
    match /legendGames/{gameId} {
      allow read, update, delete: if isSignedIn() && isParticipant(resource);
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
    }
    
    // --- Reports ---
    // Only signed-in users can create a report.
    match /reports/{reportId} {
        allow create: if isSignedIn();
    }
  }
}
